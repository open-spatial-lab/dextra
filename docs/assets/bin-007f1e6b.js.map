{"version":3,"file":"bin-007f1e6b.js","sources":["../../node_modules/d3-array/src/threshold/freedmanDiaconis.js","../../node_modules/d3-array/src/threshold/scott.js","../../node_modules/@observablehq/plot/src/transforms/bin.js"],"sourcesContent":["import count from \"../count.js\";\nimport quantile from \"../quantile.js\";\n\nexport default function thresholdFreedmanDiaconis(values, min, max) {\n  const c = count(values), d = quantile(values, 0.75) - quantile(values, 0.25);\n  return c && d ? Math.ceil((max - min) / (2 * d * Math.pow(c, -1 / 3))) : 1;\n}\n","import count from \"../count.js\";\nimport deviation from \"../deviation.js\";\n\nexport default function thresholdScott(values, min, max) {\n  const c = count(values), d = deviation(values);\n  return c && d ? Math.ceil((max - min) * Math.cbrt(c) / (3.49 * d)) : 1;\n}\n","import {\n  bisect,\n  extent,\n  thresholdFreedmanDiaconis,\n  thresholdScott,\n  thresholdSturges,\n  tickIncrement,\n  ticks,\n  utcTickInterval\n} from \"d3\";\nimport {withTip} from \"../mark.js\";\nimport {\n  coerceDate,\n  coerceNumbers,\n  identity,\n  isIterable,\n  isTemporal,\n  labelof,\n  map,\n  maybeApplyInterval,\n  maybeColorChannel,\n  maybeColumn,\n  maybeRangeInterval,\n  maybeTuple,\n  maybeValue,\n  mid,\n  valueof\n} from \"../options.js\";\nimport {maybeUtcInterval} from \"../time.js\";\nimport {basic} from \"./basic.js\";\nimport {\n  hasOutput,\n  maybeEvaluator,\n  maybeGroup,\n  maybeOutput,\n  maybeOutputs,\n  maybeReduce,\n  maybeSort,\n  maybeSubgroup,\n  reduceCount,\n  reduceFirst,\n  reduceIdentity\n} from \"./group.js\";\nimport {maybeInsetX, maybeInsetY} from \"./inset.js\";\n\n// Group on {z, fill, stroke}, then optionally on y, then bin x.\nexport function binX(outputs = {y: \"count\"}, options = {}) {\n  [outputs, options] = mergeOptions(outputs, options);\n  const {x, y} = options;\n  return binn(maybeBinValue(x, options, identity), null, null, y, outputs, maybeInsetX(options));\n}\n\n// Group on {z, fill, stroke}, then optionally on x, then bin y.\nexport function binY(outputs = {x: \"count\"}, options = {}) {\n  [outputs, options] = mergeOptions(outputs, options);\n  const {x, y} = options;\n  return binn(null, maybeBinValue(y, options, identity), x, null, outputs, maybeInsetY(options));\n}\n\n// Group on {z, fill, stroke}, then bin on x and y.\nexport function bin(outputs = {fill: \"count\"}, options = {}) {\n  [outputs, options] = mergeOptions(outputs, options);\n  const {x, y} = maybeBinValueTuple(options);\n  return binn(x, y, null, null, outputs, maybeInsetX(maybeInsetY(options)));\n}\n\nfunction maybeDenseInterval(bin, k, options = {}) {\n  return options?.interval == null\n    ? options\n    : bin({[k]: options?.reduce === undefined ? reduceFirst : options.reduce, filter: null}, options);\n}\n\nexport function maybeDenseIntervalX(options = {}) {\n  return maybeDenseInterval(binX, \"y\", withTip(options, \"x\"));\n}\n\nexport function maybeDenseIntervalY(options = {}) {\n  return maybeDenseInterval(binY, \"x\", withTip(options, \"y\"));\n}\n\nfunction binn(\n  bx, // optionally bin on x (exclusive with gx)\n  by, // optionally bin on y (exclusive with gy)\n  gx, // optionally group on x (exclusive with bx and gy)\n  gy, // optionally group on y (exclusive with by and gx)\n  {\n    data: reduceData = reduceIdentity, // TODO avoid materializing when unused?\n    filter = reduceCount, // return only non-empty bins by default\n    sort,\n    reverse,\n    ...outputs // output channel definitions\n  } = {},\n  inputs = {} // input channels and options\n) {\n  bx = maybeBin(bx);\n  by = maybeBin(by);\n\n  // Compute the outputs.\n  outputs = maybeBinOutputs(outputs, inputs);\n  reduceData = maybeBinReduce(reduceData, identity);\n  sort = sort == null ? undefined : maybeBinOutput(\"sort\", sort, inputs);\n  filter = filter == null ? undefined : maybeBinEvaluator(\"filter\", filter, inputs);\n\n  // Donâ€™t group on a channel if an output requires it as an input!\n  if (gx != null && hasOutput(outputs, \"x\", \"x1\", \"x2\")) gx = null;\n  if (gy != null && hasOutput(outputs, \"y\", \"y1\", \"y2\")) gy = null;\n\n  // Produce x1, x2, y1, and y2 output channels as appropriate (when binning).\n  const [BX1, setBX1] = maybeColumn(bx);\n  const [BX2, setBX2] = maybeColumn(bx);\n  const [BY1, setBY1] = maybeColumn(by);\n  const [BY2, setBY2] = maybeColumn(by);\n\n  // Produce x or y output channels as appropriate (when grouping).\n  const [k, gk] = gx != null ? [gx, \"x\"] : gy != null ? [gy, \"y\"] : [];\n  const [GK, setGK] = maybeColumn(k);\n\n  // Greedily materialize the z, fill, and stroke channels (if channels and not\n  // constants) so that we can reference them for subdividing groups without\n  // computing them more than once. We also want to consume options that should\n  // only apply to this transform rather than passing them through to the next.\n  const {\n    x,\n    y,\n    z,\n    fill,\n    stroke,\n    x1,\n    x2, // consumed if x is an output\n    y1,\n    y2, // consumed if y is an output\n    domain,\n    cumulative,\n    thresholds,\n    interval,\n    ...options\n  } = inputs;\n  const [GZ, setGZ] = maybeColumn(z);\n  const [vfill] = maybeColorChannel(fill);\n  const [vstroke] = maybeColorChannel(stroke);\n  const [GF, setGF] = maybeColumn(vfill);\n  const [GS, setGS] = maybeColumn(vstroke);\n\n  return {\n    ...(\"z\" in inputs && {z: GZ || z}),\n    ...(\"fill\" in inputs && {fill: GF || fill}),\n    ...(\"stroke\" in inputs && {stroke: GS || stroke}),\n    ...basic(options, (data, facets, plotOptions) => {\n      const K = maybeApplyInterval(valueof(data, k), plotOptions?.[gk]);\n      const Z = valueof(data, z);\n      const F = valueof(data, vfill);\n      const S = valueof(data, vstroke);\n      const G = maybeSubgroup(outputs, {z: Z, fill: F, stroke: S});\n      const groupFacets = [];\n      const groupData = [];\n      const GK = K && setGK([]);\n      const GZ = Z && setGZ([]);\n      const GF = F && setGF([]);\n      const GS = S && setGS([]);\n      const BX1 = bx && setBX1([]);\n      const BX2 = bx && setBX2([]);\n      const BY1 = by && setBY1([]);\n      const BY2 = by && setBY2([]);\n      const bin = bing(bx?.(data), by?.(data));\n      let i = 0;\n      for (const o of outputs) o.initialize(data);\n      if (sort) sort.initialize(data);\n      if (filter) filter.initialize(data);\n      for (const facet of facets) {\n        const groupFacet = [];\n        for (const o of outputs) o.scope(\"facet\", facet);\n        if (sort) sort.scope(\"facet\", facet);\n        if (filter) filter.scope(\"facet\", facet);\n        for (const [f, I] of maybeGroup(facet, G)) {\n          for (const [k, g] of maybeGroup(I, K)) {\n            for (const [b, extent] of bin(g)) {\n              if (filter && !filter.reduce(b, extent)) continue;\n              groupFacet.push(i++);\n              groupData.push(reduceData.reduceIndex(b, data, extent));\n              if (K) GK.push(k);\n              if (Z) GZ.push(G === Z ? f : Z[b[0]]);\n              if (F) GF.push(G === F ? f : F[b[0]]);\n              if (S) GS.push(G === S ? f : S[b[0]]);\n              if (BX1) BX1.push(extent.x1), BX2.push(extent.x2);\n              if (BY1) BY1.push(extent.y1), BY2.push(extent.y2);\n              for (const o of outputs) o.reduce(b, extent);\n              if (sort) sort.reduce(b);\n            }\n          }\n        }\n        groupFacets.push(groupFacet);\n      }\n      maybeSort(groupFacets, sort, reverse);\n      return {data: groupData, facets: groupFacets};\n    }),\n    ...(!hasOutput(outputs, \"x\") && (BX1 ? {x1: BX1, x2: BX2, x: mid(BX1, BX2)} : {x, x1, x2})),\n    ...(!hasOutput(outputs, \"y\") && (BY1 ? {y1: BY1, y2: BY2, y: mid(BY1, BY2)} : {y, y1, y2})),\n    ...(GK && {[gk]: GK}),\n    ...Object.fromEntries(outputs.map(({name, output}) => [name, output]))\n  };\n}\n\n// Allow bin options to be specified as part of outputs; merge them into options.\nfunction mergeOptions({cumulative, domain, thresholds, interval, ...outputs}, options) {\n  return [outputs, {cumulative, domain, thresholds, interval, ...options}];\n}\n\nfunction maybeBinValue(value, {cumulative, domain, thresholds, interval}, defaultValue) {\n  value = {...maybeValue(value)};\n  if (value.domain === undefined) value.domain = domain;\n  if (value.cumulative === undefined) value.cumulative = cumulative;\n  if (value.thresholds === undefined) value.thresholds = thresholds;\n  if (value.interval === undefined) value.interval = interval;\n  if (value.value === undefined) value.value = defaultValue;\n  value.thresholds = maybeThresholds(value.thresholds, value.interval);\n  return value;\n}\n\nfunction maybeBinValueTuple(options) {\n  let {x, y} = options;\n  x = maybeBinValue(x, options);\n  y = maybeBinValue(y, options);\n  [x.value, y.value] = maybeTuple(x.value, y.value);\n  return {x, y};\n}\n\nfunction maybeBin(options) {\n  if (options == null) return;\n  const {value, cumulative, domain = extent, thresholds} = options;\n  const bin = (data) => {\n    let V = valueof(data, value);\n    let T; // bin thresholds\n    if (isTemporal(V) || isTimeThresholds(thresholds)) {\n      V = map(V, coerceDate, Float64Array); // like coerceDates, but faster\n      let [min, max] = typeof domain === \"function\" ? domain(V) : domain;\n      let t = typeof thresholds === \"function\" && !isInterval(thresholds) ? thresholds(V, min, max) : thresholds;\n      if (typeof t === \"number\") t = utcTickInterval(min, max, t);\n      if (isInterval(t)) {\n        if (domain === extent) {\n          min = t.floor(min);\n          max = t.offset(t.floor(max));\n        }\n        t = t.range(min, t.offset(max));\n      }\n      T = t;\n    } else {\n      V = coerceNumbers(V);\n      let [min, max] = typeof domain === \"function\" ? domain(V) : domain;\n      let t = typeof thresholds === \"function\" && !isInterval(thresholds) ? thresholds(V, min, max) : thresholds;\n      if (typeof t === \"number\") {\n        // This differs from d3.ticks with regard to exclusive bounds: we want a\n        // first threshold less than or equal to the minimum, and a last\n        // threshold (strictly) greater than the maximum.\n        if (domain === extent) {\n          let step = tickIncrement(min, max, t);\n          if (isFinite(step)) {\n            if (step > 0) {\n              let r0 = Math.round(min / step);\n              let r1 = Math.round(max / step);\n              if (!(r0 * step <= min)) --r0;\n              if (!(r1 * step > max)) ++r1;\n              let n = r1 - r0 + 1;\n              t = new Float64Array(n);\n              for (let i = 0; i < n; ++i) t[i] = (r0 + i) * step;\n            } else if (step < 0) {\n              step = -step;\n              let r0 = Math.round(min * step);\n              let r1 = Math.round(max * step);\n              if (!(r0 / step <= min)) --r0;\n              if (!(r1 / step > max)) ++r1;\n              let n = r1 - r0 + 1;\n              t = new Float64Array(n);\n              for (let i = 0; i < n; ++i) t[i] = (r0 + i) / step;\n            } else {\n              t = [min];\n            }\n          } else {\n            t = [min];\n          }\n        } else {\n          t = ticks(min, max, t);\n        }\n      } else if (isInterval(t)) {\n        if (domain === extent) {\n          min = t.floor(min);\n          max = t.offset(t.floor(max));\n        }\n        t = t.range(min, t.offset(max));\n      }\n      T = t;\n    }\n    const E = [];\n    if (T.length === 1) E.push([T[0], T[0]]); // collapsed domain\n    else for (let i = 1; i < T.length; ++i) E.push([T[i - 1], T[i]]);\n    E.bin = (cumulative < 0 ? bin1cn : cumulative > 0 ? bin1cp : bin1)(E, T, V);\n    return E;\n  };\n  bin.label = labelof(value);\n  return bin;\n}\n\nexport function maybeThresholds(thresholds, interval, defaultThresholds = thresholdAuto) {\n  if (thresholds === undefined) {\n    return interval === undefined ? defaultThresholds : maybeRangeInterval(interval);\n  }\n  if (typeof thresholds === \"string\") {\n    switch (thresholds.toLowerCase()) {\n      case \"freedman-diaconis\":\n        return thresholdFreedmanDiaconis;\n      case \"scott\":\n        return thresholdScott;\n      case \"sturges\":\n        return thresholdSturges;\n      case \"auto\":\n        return thresholdAuto;\n    }\n    return maybeUtcInterval(thresholds);\n  }\n  return thresholds; // pass array, count, or function to bin.thresholds\n}\n\nfunction maybeBinOutputs(outputs, inputs) {\n  return maybeOutputs(outputs, inputs, maybeBinOutput);\n}\n\nfunction maybeBinOutput(name, reduce, inputs) {\n  return maybeOutput(name, reduce, inputs, maybeBinEvaluator);\n}\n\nfunction maybeBinEvaluator(name, reduce, inputs) {\n  return maybeEvaluator(name, reduce, inputs, maybeBinReduce);\n}\n\nfunction maybeBinReduce(reduce, value) {\n  return maybeReduce(reduce, value, maybeBinReduceFallback);\n}\n\nfunction maybeBinReduceFallback(reduce) {\n  switch (`${reduce}`.toLowerCase()) {\n    case \"x\":\n      return reduceX;\n    case \"x1\":\n      return reduceX1;\n    case \"x2\":\n      return reduceX2;\n    case \"y\":\n      return reduceY;\n    case \"y1\":\n      return reduceY1;\n    case \"y2\":\n      return reduceY2;\n  }\n  throw new Error(`invalid bin reduce: ${reduce}`);\n}\n\nfunction thresholdAuto(values, min, max) {\n  return Math.min(200, thresholdScott(values, min, max));\n}\n\nfunction isTimeThresholds(t) {\n  return isTimeInterval(t) || (isIterable(t) && isTemporal(t));\n}\n\nfunction isTimeInterval(t) {\n  return isInterval(t) && typeof t === \"function\" && t() instanceof Date;\n}\n\nfunction isInterval(t) {\n  return typeof t?.range === \"function\";\n}\n\nfunction bing(EX, EY) {\n  return EX && EY\n    ? function* (I) {\n        const X = EX.bin(I); // first bin on x\n        for (const [ix, [x1, x2]] of EX.entries()) {\n          const Y = EY.bin(X[ix]); // then bin on y\n          for (const [iy, [y1, y2]] of EY.entries()) {\n            yield [Y[iy], {x1, y1, x2, y2}];\n          }\n        }\n      }\n    : EX\n    ? function* (I) {\n        const X = EX.bin(I);\n        for (const [i, [x1, x2]] of EX.entries()) {\n          yield [X[i], {x1, x2}];\n        }\n      }\n    : function* (I) {\n        const Y = EY.bin(I);\n        for (const [i, [y1, y2]] of EY.entries()) {\n          yield [Y[i], {y1, y2}];\n        }\n      };\n}\n\n// non-cumulative distribution\nfunction bin1(E, T, V) {\n  T = coerceNumbers(T); // for faster bisection\n  return (I) => {\n    const B = E.map(() => []);\n    for (const i of I) B[bisect(T, V[i]) - 1]?.push(i); // TODO quantization?\n    return B;\n  };\n}\n\n// cumulative distribution\nfunction bin1cp(E, T, V) {\n  const bin = bin1(E, T, V);\n  return (I) => {\n    const B = bin(I);\n    for (let i = 1, n = B.length; i < n; ++i) {\n      const C = B[i - 1];\n      const b = B[i];\n      for (const j of C) b.push(j);\n    }\n    return B;\n  };\n}\n\n// complementary cumulative distribution\nfunction bin1cn(E, T, V) {\n  const bin = bin1(E, T, V);\n  return (I) => {\n    const B = bin(I);\n    for (let i = B.length - 2; i >= 0; --i) {\n      const C = B[i + 1];\n      const b = B[i];\n      for (const j of C) b.push(j);\n    }\n    return B;\n  };\n}\n\nfunction mid1(x1, x2) {\n  const m = (+x1 + +x2) / 2;\n  return x1 instanceof Date ? new Date(m) : m;\n}\n\nconst reduceX = {\n  reduceIndex(I, X, {x1, x2}) {\n    return mid1(x1, x2);\n  }\n};\n\nconst reduceY = {\n  reduceIndex(I, X, {y1, y2}) {\n    return mid1(y1, y2);\n  }\n};\n\nconst reduceX1 = {\n  reduceIndex(I, X, {x1}) {\n    return x1;\n  }\n};\n\nconst reduceX2 = {\n  reduceIndex(I, X, {x2}) {\n    return x2;\n  }\n};\n\nconst reduceY1 = {\n  reduceIndex(I, X, {y1}) {\n    return y1;\n  }\n};\n\nconst reduceY2 = {\n  reduceIndex(I, X, {y2}) {\n    return y2;\n  }\n};\n"],"names":["thresholdFreedmanDiaconis","values","min","max","c","count","d","quantile","thresholdScott","deviation","binX","outputs","options","mergeOptions","x","y","binn","maybeBinValue","identity","maybeInsetX","binY","maybeInsetY","bin","maybeBinValueTuple","maybeDenseInterval","k","reduceFirst","maybeDenseIntervalX","withTip","maybeDenseIntervalY","bx","by","gx","gy","reduceData","reduceIdentity","filter","reduceCount","sort","reverse","inputs","maybeBin","maybeBinOutputs","maybeBinReduce","maybeBinOutput","maybeBinEvaluator","hasOutput","BX1","setBX1","maybeColumn","BX2","setBX2","BY1","setBY1","BY2","setBY2","gk","GK","setGK","z","fill","stroke","x1","x2","y1","y2","domain","cumulative","thresholds","interval","GZ","setGZ","vfill","maybeColorChannel","vstroke","GF","setGF","GS","setGS","basic","data","facets","plotOptions","K","maybeApplyInterval","valueof","Z","F","S","G","maybeSubgroup","groupFacets","groupData","bing","i","o","facet","groupFacet","f","I","maybeGroup","g","b","extent","maybeSort","mid","name","output","value","defaultValue","maybeValue","maybeThresholds","maybeTuple","V","T","isTemporal","isTimeThresholds","map","coerceDate","t","isInterval","utcTickInterval","coerceNumbers","step","tickIncrement","r0","r1","n","ticks","E","bin1cn","bin1cp","bin1","labelof","defaultThresholds","thresholdAuto","maybeRangeInterval","thresholdSturges","maybeUtcInterval","maybeOutputs","reduce","maybeOutput","maybeEvaluator","maybeReduce","maybeBinReduceFallback","reduceX","reduceX1","reduceX2","reduceY","reduceY1","reduceY2","isTimeInterval","isIterable","EX","EY","X","ix","Y","iy","B","_a","bisect","C","j","mid1","m"],"mappings":"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","x_google_ignoreList":[0,1,2]}