const f=(n,u)=>{if(n===null)return n;const o=/\([^()]*\)\s*=>/g.test(n),i=/\w+\s*=>/g.test(n),c=/^function\s*\([^\)]*\)\s*\{.*\}$/s.test(n);if(o||i){const s=n.split("=>"),r=i?[null,null,s[0],s[1]]:/^\s*([^\(]*)?\s*\(?([^\)]*)\)?\s*=>\s*{?([\s\S]*)}?/.exec(n);if(r!=null&&r.length&&r.length>3){const e=r;let t=e[3];return t.includes("return")||(t="return "+t),t[t.length-1]==="}"&&(t=t.slice(0,-1)),new Function(e[2],t)}else return e=>e}if(c){const s=/function\s*([^\(]*)\s*\(([^\)]*)\)\s*\{([\s\S]*)\}/.exec(n);return s?new Function(s[2],s[3]):r=>r}try{return JSON.parse(n)}catch{return n}};export{f as i};
//# sourceMappingURL=converters-40be0569.js.map
