{"version":3,"file":"Geo-a7aaf6b9.js","sources":["../../node_modules/@observablehq/plot/src/marks/geo.js","../../dextra-components/src/components/marks/Geo/src/Geo.ts"],"sourcesContent":["import {geoGraticule10, geoPath, geoTransform} from \"d3\";\nimport {create} from \"../context.js\";\nimport {negative, positive} from \"../defined.js\";\nimport {Mark} from \"../mark.js\";\nimport {identity, maybeNumberChannel} from \"../options.js\";\nimport {applyChannelStyles, applyDirectStyles, applyIndirectStyles, applyTransform} from \"../style.js\";\nimport {withDefaultSort} from \"./dot.js\";\n\nconst defaults = {\n  ariaLabel: \"geo\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 1,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  strokeMiterlimit: 1\n};\n\nexport class Geo extends Mark {\n  constructor(data, options = {}) {\n    const [vr, cr] = maybeNumberChannel(options.r, 3);\n    super(\n      data,\n      {\n        geometry: {value: options.geometry, scale: \"projection\"},\n        r: {value: vr, scale: \"r\", filter: positive, optional: true}\n      },\n      withDefaultSort(options),\n      defaults\n    );\n    this.r = cr;\n  }\n  render(index, scales, channels, dimensions, context) {\n    const {geometry: G, r: R} = channels;\n    const path = geoPath(context.projection ?? scaleProjection(scales));\n    const {r} = this;\n    if (negative(r)) index = [];\n    else if (r !== undefined) path.pointRadius(r);\n    return create(\"svg:g\", context)\n      .call(applyIndirectStyles, this, dimensions, context)\n      .call(applyTransform, this, scales)\n      .call((g) => {\n        g.selectAll()\n          .data(index)\n          .enter()\n          .append(\"path\")\n          .call(applyDirectStyles, this)\n          .attr(\"d\", R ? (i) => path.pointRadius(R[i])(G[i]) : (i) => path(G[i]))\n          .call(applyChannelStyles, this, channels);\n      })\n      .node();\n  }\n}\n\n// If no projection is specified, default to a projection that passes points\n// through the x and y scales, if any.\nfunction scaleProjection({x: X, y: Y}) {\n  if (X || Y) {\n    X ??= (x) => x;\n    Y ??= (y) => y;\n    return geoTransform({\n      point(x, y) {\n        this.stream.point(X(x), Y(y));\n      }\n    });\n  }\n}\n\nexport function geo(data, {geometry = identity, ...options} = {}) {\n  switch (data?.type) {\n    case \"FeatureCollection\":\n      data = data.features;\n      break;\n    case \"GeometryCollection\":\n      data = data.geometries;\n      break;\n    case \"Feature\":\n    case \"LineString\":\n    case \"MultiLineString\":\n    case \"MultiPoint\":\n    case \"MultiPolygon\":\n    case \"Point\":\n    case \"Polygon\":\n    case \"Sphere\":\n      data = [data];\n      break;\n  }\n  return new Geo(data, {geometry, ...options});\n}\n\nexport function sphere({strokeWidth = 1.5, ...options} = {}) {\n  return geo({type: \"Sphere\"}, {strokeWidth, ...options});\n}\n\nexport function graticule({strokeOpacity = 0.1, ...options} = {}) {\n  return geo(geoGraticule10(), {strokeOpacity, ...options});\n}\n","import { customElement, property } from \"lit/decorators.js\";\nimport { PlotMark } from \"../../PlotMark/src/PlotMark\";\nimport * as Plot from \"@observablehq/plot\";\nimport { GeoOptions } from \"@observablehq/plot\";\nimport { interpretFuncJsonOrString } from \"../../../core/utils/converters\";\n//@ts-ignore\nimport { parse as parseWkt } from \"wkt\";\nimport { safeCustomElement } from \"../../../core/decorators/safeCustomElement\";\n\nconst EMPTY_GEOJSON = {\n  type: \"FeatureCollection\",\n  features: [],\n};\n\n@safeCustomElement(\"osl-geo\")\nexport class OslGeo extends PlotMark {\n  mark = \"geo\";\n\n  @property({ converter: interpretFuncJsonOrString })\n  geometry?: GeoOptions[\"geometry\"];\n\n  @property({ converter: interpretFuncJsonOrString })\n  r?: GeoOptions[\"r\"];\n\n  markOptions: (keyof this)[] = [\"geometry\", \"r\"];\n\n  converters?: Record<string, (f: any) => any> = {\n    fill: (fillParam: any) =>\n      typeof fillParam === \"function\"\n        ? fillParam\n        : (data: Record<string, unknown>) =>\n            this.getDeepValue(\n              data,\n              fillParam.includes(\"properties\")\n                ? fillParam\n                : `properties.${fillParam}`\n            ),\n  };\n\n  public get plot() {\n    const innerData = this?.currentResults;\n    const options = this.allOptions;\n\n    return (overrideData?: any, overrideOptions?: {}) => {\n      // @ts-ignore\n      const dataToUse = overrideData || innerData;\n      const data = !dataToUse?.type ? EMPTY_GEOJSON : dataToUse;\n      return Plot.geo(data, {\n        ...overrideOptions,\n        ...options,\n      });\n    };\n  }\n\n  render() {\n    return null;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"osl-geo\": OslGeo;\n  }\n}\n"],"names":["defaults","Geo","Mark","data","options","vr","cr","maybeNumberChannel","positive","withDefaultSort","index","scales","channels","dimensions","context","G","R","path","geoPath","scaleProjection","r","negative","create","applyIndirectStyles","applyTransform","g","applyDirectStyles","i","applyChannelStyles","X","Y","x","y","geoTransform","geo","geometry","identity","EMPTY_GEOJSON","OslGeo","PlotMark","fillParam","innerData","overrideData","overrideOptions","dataToUse","Plot.geo","__decorateClass","property","interpretFuncJsonOrString","safeCustomElement"],"mappings":"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","x_google_ignoreList":[0]}