{"version":3,"file":"Dot-8d81f0ef.js","sources":["../../dextra-components/src/components/Marks/PlotMark/src/PlotMark.ts","../../dextra-components/src/components/Marks/Dot/src/Dot.ts"],"sourcesContent":["import { OslData } from \"../../../data/src/Data\";\nimport type { MarkOptions } from \"@observablehq/plot\";\nimport * as Plot from \"@observablehq/plot\";\nimport { property } from \"lit/decorators.js\";\nimport { interpretFuncJsonOrString } from \"../../../core/utils/converters\";\n\nexport class PlotMark extends OslData {\n  mark = \"base\";\n\n  @property({ converter: interpretFuncJsonOrString })\n  filter?: MarkOptions[\"filter\"];\n\n  @property({ converter: interpretFuncJsonOrString })\n  reverse?: MarkOptions[\"reverse\"];\n\n  @property({ converter: interpretFuncJsonOrString })\n  sort?: MarkOptions[\"sort\"];\n\n  @property({ converter: interpretFuncJsonOrString })\n  transform?: MarkOptions[\"transform\"];\n\n  @property({ converter: interpretFuncJsonOrString })\n  initializer?: MarkOptions[\"initializer\"];\n\n  @property({ converter: interpretFuncJsonOrString })\n  fx?: MarkOptions[\"fx\"];\n\n  @property({ converter: interpretFuncJsonOrString })\n  fy?: MarkOptions[\"fy\"];\n\n  @property({ converter: interpretFuncJsonOrString })\n  facet?: MarkOptions[\"facet\"];\n\n  @property({ converter: interpretFuncJsonOrString })\n  facetAnchror?: MarkOptions[\"facetAnchor\"];\n\n  @property({ converter: interpretFuncJsonOrString })\n  margin?: MarkOptions[\"margin\"];\n\n  @property({ converter: interpretFuncJsonOrString })\n  marginTop?: MarkOptions[\"marginTop\"];\n\n  @property({ converter: interpretFuncJsonOrString })\n  marginRight?: MarkOptions[\"marginRight\"];\n\n  @property({ converter: interpretFuncJsonOrString })\n  marginBottom?: MarkOptions[\"marginBottom\"];\n\n  @property({ converter: interpretFuncJsonOrString })\n  marginLeft?: MarkOptions[\"marginLeft\"];\n\n  @property({ converter: interpretFuncJsonOrString })\n  ariaDescription?: MarkOptions[\"ariaDescription\"];\n\n  @property({ converter: interpretFuncJsonOrString })\n  pointerEvents?: MarkOptions[\"pointerEvents\"];\n\n  @property({ converter: interpretFuncJsonOrString })\n  clip?: MarkOptions[\"clip\"];\n\n  @property({ converter: interpretFuncJsonOrString })\n  dx?: MarkOptions[\"dx\"];\n\n  @property({ converter: interpretFuncJsonOrString })\n  dy?: MarkOptions[\"dy\"];\n\n  @property({ converter: interpretFuncJsonOrString })\n  fill?: MarkOptions[\"fill\"];\n\n  @property({ converter: interpretFuncJsonOrString })\n  fillOpacity?: MarkOptions[\"fillOpacity\"];\n\n  @property({ converter: interpretFuncJsonOrString })\n  stroke?: MarkOptions[\"stroke\"];\n  \n  @property({ converter: interpretFuncJsonOrString })\n  strokeDasharray?: MarkOptions[\"strokeDasharray\"];\n\n  @property({ converter: interpretFuncJsonOrString })\n  strokeDashoffset?: MarkOptions[\"strokeDashoffset\"];\n\n  @property({ converter: interpretFuncJsonOrString })\n  strokeLinecap?: MarkOptions[\"strokeLinecap\"];\n\n  @property({ converter: interpretFuncJsonOrString })\n  strokeLinejoin?: MarkOptions[\"strokeLinejoin\"];\n\n  @property({ converter: interpretFuncJsonOrString })\n  strokeMiterlimit?: MarkOptions[\"strokeMiterlimit\"];\n\n  @property({ converter: interpretFuncJsonOrString })\n  strokeOpacity?: MarkOptions[\"strokeOpacity\"];\n\n  @property({ converter: interpretFuncJsonOrString })\n  strokeWidth?: MarkOptions[\"strokeWidth\"];\n\n  @property({ converter: interpretFuncJsonOrString })\n  opacity?: MarkOptions[\"opacity\"];\n\n  @property({ converter: interpretFuncJsonOrString })\n  mixBlendMode?: MarkOptions[\"mixBlendMode\"];\n\n  @property({ converter: interpretFuncJsonOrString })\n  paintOrder?: MarkOptions[\"paintOrder\"];\n\n  @property({ converter: interpretFuncJsonOrString })\n  shapeRendering?: MarkOptions[\"shapeRendering\"];\n\n  @property({ converter: interpretFuncJsonOrString })\n  href?: MarkOptions[\"href\"];\n\n  @property({ converter: interpretFuncJsonOrString })\n  target?: MarkOptions[\"target\"];\n\n  @property({ converter: interpretFuncJsonOrString })\n  channels?: MarkOptions[\"channels\"];\n\n  @property({ converter: interpretFuncJsonOrString })\n  tip?: MarkOptions[\"tip\"] = true;\n\n  baseOptions: (keyof this)[] = [\n    \"filter\",\n    \"reverse\",\n    \"sort\",\n    \"transform\",\n    \"initializer\",\n    \"fx\",\n    \"fy\",\n    \"facet\",\n    \"facetAnchror\",\n    \"margin\",\n    \"marginTop\",\n    \"marginRight\",\n    \"marginBottom\",\n    \"marginLeft\",\n    \"ariaDescription\",\n    \"pointerEvents\",\n    \"clip\",\n    \"dx\",\n    \"dy\",\n    \"fill\",\n    \"fillOpacity\",\n    \"stroke\",\n    \"strokeDasharray\",\n    \"strokeDashoffset\",\n    \"strokeLinecap\",\n    \"strokeLinejoin\",\n    \"strokeMiterlimit\",\n    \"strokeOpacity\",\n    \"strokeWidth\",\n    \"opacity\",\n    \"mixBlendMode\",\n    \"paintOrder\",\n    \"shapeRendering\",\n    \"href\",\n    \"target\",\n    \"channels\",\n    \"tip\",\n  ] as const;\n\n  protected converters?: Record<string, ((f:any) => any)> = {\n    fill: (fillParam: any) => typeof fillParam === \"function\" ? fillParam : (data: Record<string,unknown>) => this.getDeepValue(data, fillParam)\n  }\n\n  markOptions: (keyof this)[] = [];\n\n  protected get allOptions() {\n    const options: { [key: string]: any } = {};\n    this.baseOptions.forEach((option) => {\n      if (this[option] !== undefined) {\n        const converter = this.converters?.[option as string] || ((d:any) => d);\n        options[option as string] = converter(this[option]);\n      }\n    });\n    this.markOptions.forEach((option) => {\n      const converter = this.converters?.[option as string] || ((d:any) => d);\n      if (this[option] !== undefined) {\n        options[option as string] = converter(this[option]);\n      }\n    });\n\n    return options;\n  }\n  \n  public get plot(): (\n    _overrideData?: any,\n    _overrideOptions?: {}\n  ) => Plot.RenderableMark | Plot.CompoundMark | never[] {\n    return (_f, _j) => [];\n  }\n\n  render() {\n    return null;\n  }\n}\n","import { customElement, property } from \"lit/decorators.js\";\nimport * as Plot from \"@observablehq/plot\";\nimport { DotOptions } from \"@observablehq/plot\";\nimport { PlotMark } from \"../../PlotMark/src/PlotMark\";\nimport { interpretFuncJsonOrString } from \"../../../core/utils/converters\";\nimport { safeCustomElement } from \"../../../core/decorators/safeCustomElement\";\n\n@safeCustomElement(\"osl-dot-plot\")\nexport class OslDotPlot extends PlotMark {\n  mark = \"dot\";\n\n  @property({ converter: interpretFuncJsonOrString })\n  x?: DotOptions[\"x\"];\n\n  @property({ converter: interpretFuncJsonOrString })\n  y?: DotOptions[\"y\"];\n\n  @property({ converter: interpretFuncJsonOrString })\n  r?: DotOptions[\"fill\"];\n\n  markOptions: (keyof this)[] = [\"x\", \"y\", \"r\"];\n  \n  public get plot() {\n    const innerData = this?.currentResults;\n    const options = this.allOptions;\n\n    return (overrideData?: any, overrideOptions?: {}) => {\n      const data = innerData?.length ? innerData : overrideData;\n      return Plot.dot(data, { ...overrideOptions, ...options});\n    };\n  }\n\n  render() {\n    return null;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"osl-dot-plot\": OslDotPlot;\n  }\n}\n"],"names":["PlotMark","OslData","fillParam","data","options","option","converter","_a","d","_f","_j","__decorateClass","property","interpretFuncJsonOrString","OslDotPlot","innerData","overrideData","overrideOptions","Plot.dot","safeCustomElement"],"mappings":"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"}