{"version":3,"file":"rect-60102cfc.js","sources":["../../node_modules/@observablehq/plot/src/marks/rect.js"],"sourcesContent":["import {create} from \"../context.js\";\nimport {Mark} from \"../mark.js\";\nimport {hasXY, identity, indexOf, number} from \"../options.js\";\nimport {isCollapsed} from \"../scales.js\";\nimport {applyAttr, applyChannelStyles, applyDirectStyles, applyIndirectStyles, applyTransform} from \"../style.js\";\nimport {impliedString} from \"../style.js\";\nimport {maybeIdentityX, maybeIdentityY} from \"../transforms/identity.js\";\nimport {maybeTrivialIntervalX, maybeTrivialIntervalY} from \"../transforms/interval.js\";\nimport {maybeStackX, maybeStackY} from \"../transforms/stack.js\";\n\nconst defaults = {\n  ariaLabel: \"rect\"\n};\n\nexport class Rect extends Mark {\n  constructor(data, options = {}) {\n    const {\n      x1,\n      y1,\n      x2,\n      y2,\n      inset = 0,\n      insetTop = inset,\n      insetRight = inset,\n      insetBottom = inset,\n      insetLeft = inset,\n      rx,\n      ry\n    } = options;\n    super(\n      data,\n      {\n        x1: {value: x1, scale: \"x\", optional: true},\n        y1: {value: y1, scale: \"y\", optional: true},\n        x2: {value: x2, scale: \"x\", optional: true},\n        y2: {value: y2, scale: \"y\", optional: true}\n      },\n      options,\n      defaults\n    );\n    this.insetTop = number(insetTop);\n    this.insetRight = number(insetRight);\n    this.insetBottom = number(insetBottom);\n    this.insetLeft = number(insetLeft);\n    this.rx = impliedString(rx, \"auto\"); // number or percentage\n    this.ry = impliedString(ry, \"auto\");\n  }\n  render(index, scales, channels, dimensions, context) {\n    const {x, y} = scales;\n    const {x1: X1, y1: Y1, x2: X2, y2: Y2} = channels;\n    const {marginTop, marginRight, marginBottom, marginLeft, width, height} = dimensions;\n    const {projection} = context;\n    const {insetTop, insetRight, insetBottom, insetLeft, rx, ry} = this;\n    return create(\"svg:g\", context)\n      .call(applyIndirectStyles, this, dimensions, context)\n      .call(applyTransform, this, {x: X1 && X2 && x, y: Y1 && Y2 && y}, 0, 0)\n      .call((g) =>\n        g\n          .selectAll()\n          .data(index)\n          .enter()\n          .append(\"rect\")\n          .call(applyDirectStyles, this)\n          .attr(\n            \"x\",\n            X1 && X2 && (projection || !isCollapsed(x))\n              ? (i) => Math.min(X1[i], X2[i]) + insetLeft\n              : marginLeft + insetLeft\n          )\n          .attr(\n            \"y\",\n            Y1 && Y2 && (projection || !isCollapsed(y))\n              ? (i) => Math.min(Y1[i], Y2[i]) + insetTop\n              : marginTop + insetTop\n          )\n          .attr(\n            \"width\",\n            X1 && X2 && (projection || !isCollapsed(x))\n              ? (i) => Math.max(0, Math.abs(X2[i] - X1[i]) - insetLeft - insetRight)\n              : width - marginRight - marginLeft - insetRight - insetLeft\n          )\n          .attr(\n            \"height\",\n            Y1 && Y2 && (projection || !isCollapsed(y))\n              ? (i) => Math.max(0, Math.abs(Y1[i] - Y2[i]) - insetTop - insetBottom)\n              : height - marginTop - marginBottom - insetTop - insetBottom\n          )\n          .call(applyAttr, \"rx\", rx)\n          .call(applyAttr, \"ry\", ry)\n          .call(applyChannelStyles, this, channels)\n      )\n      .node();\n  }\n}\n\nexport function rect(data, options) {\n  return new Rect(data, maybeTrivialIntervalX(maybeTrivialIntervalY(options)));\n}\n\nexport function rectX(data, options = {}) {\n  if (!hasXY(options)) options = {...options, y: indexOf, x2: identity, interval: 1};\n  return new Rect(data, maybeStackX(maybeTrivialIntervalY(maybeIdentityX(options))));\n}\n\nexport function rectY(data, options = {}) {\n  if (!hasXY(options)) options = {...options, x: indexOf, y2: identity, interval: 1};\n  return new Rect(data, maybeStackY(maybeTrivialIntervalX(maybeIdentityY(options))));\n}\n"],"names":["defaults","Rect","Mark","data","options","x1","y1","x2","y2","inset","insetTop","insetRight","insetBottom","insetLeft","rx","ry","number","impliedString","index","scales","channels","dimensions","context","x","y","X1","Y1","X2","Y2","marginTop","marginRight","marginBottom","marginLeft","width","height","projection","create","applyIndirectStyles","applyTransform","g","applyDirectStyles","isCollapsed","i","applyAttr","applyChannelStyles","rect","maybeTrivialIntervalX","maybeTrivialIntervalY","rectX","hasXY","indexOf","identity","maybeStackX","maybeIdentityX","rectY","maybeStackY","maybeIdentityY"],"mappings":"sMAUA,MAAMA,EAAW,CACf,UAAW,MACb,EAEO,MAAMC,UAAaC,CAAK,CAC7B,YAAYC,EAAMC,EAAU,GAAI,CAC9B,KAAM,CACJ,GAAAC,EACA,GAAAC,EACA,GAAAC,EACA,GAAAC,EACA,MAAAC,EAAQ,EACR,SAAAC,EAAWD,EACX,WAAAE,EAAaF,EACb,YAAAG,EAAcH,EACd,UAAAI,EAAYJ,EACZ,GAAAK,EACA,GAAAC,CACD,EAAGX,EACJ,MACED,EACA,CACE,GAAI,CAAC,MAAOE,EAAI,MAAO,IAAK,SAAU,EAAI,EAC1C,GAAI,CAAC,MAAOC,EAAI,MAAO,IAAK,SAAU,EAAI,EAC1C,GAAI,CAAC,MAAOC,EAAI,MAAO,IAAK,SAAU,EAAI,EAC1C,GAAI,CAAC,MAAOC,EAAI,MAAO,IAAK,SAAU,EAAI,CAC3C,EACDJ,EACAJ,CACN,EACI,KAAK,SAAWgB,EAAON,CAAQ,EAC/B,KAAK,WAAaM,EAAOL,CAAU,EACnC,KAAK,YAAcK,EAAOJ,CAAW,EACrC,KAAK,UAAYI,EAAOH,CAAS,EACjC,KAAK,GAAKI,EAAcH,EAAI,MAAM,EAClC,KAAK,GAAKG,EAAcF,EAAI,MAAM,CACnC,CACD,OAAOG,EAAOC,EAAQC,EAAUC,EAAYC,EAAS,CACnD,KAAM,CAAC,EAAAC,EAAG,EAAAC,CAAC,EAAIL,EACT,CAAC,GAAIM,EAAI,GAAIC,EAAI,GAAIC,EAAI,GAAIC,CAAE,EAAIR,EACnC,CAAC,UAAAS,EAAW,YAAAC,EAAa,aAAAC,EAAc,WAAAC,EAAY,MAAAC,EAAO,OAAAC,CAAM,EAAIb,EACpE,CAAC,WAAAc,CAAU,EAAIb,EACf,CAAC,SAAAZ,EAAU,WAAAC,EAAY,YAAAC,EAAa,UAAAC,EAAW,GAAAC,EAAI,GAAAC,CAAE,EAAI,KAC/D,OAAOqB,EAAO,QAASd,CAAO,EAC3B,KAAKe,EAAqB,KAAMhB,EAAYC,CAAO,EACnD,KAAKgB,EAAgB,KAAM,CAAC,EAAGb,GAAME,GAAMJ,EAAG,EAAGG,GAAME,GAAMJ,CAAC,EAAG,EAAG,CAAC,EACrE,KAAMe,GACLA,EACG,UAAW,EACX,KAAKrB,CAAK,EACV,MAAO,EACP,OAAO,MAAM,EACb,KAAKsB,EAAmB,IAAI,EAC5B,KACC,IACAf,GAAME,IAAOQ,GAAc,CAACM,EAAYlB,CAAC,GACpCmB,GAAM,KAAK,IAAIjB,EAAGiB,CAAC,EAAGf,EAAGe,CAAC,CAAC,EAAI7B,EAChCmB,EAAanB,CAClB,EACA,KACC,IACAa,GAAME,IAAOO,GAAc,CAACM,EAAYjB,CAAC,GACpCkB,GAAM,KAAK,IAAIhB,EAAGgB,CAAC,EAAGd,EAAGc,CAAC,CAAC,EAAIhC,EAChCmB,EAAYnB,CACjB,EACA,KACC,QACAe,GAAME,IAAOQ,GAAc,CAACM,EAAYlB,CAAC,GACpCmB,GAAM,KAAK,IAAI,EAAG,KAAK,IAAIf,EAAGe,CAAC,EAAIjB,EAAGiB,CAAC,CAAC,EAAI7B,EAAYF,CAAU,EACnEsB,EAAQH,EAAcE,EAAarB,EAAaE,CACrD,EACA,KACC,SACAa,GAAME,IAAOO,GAAc,CAACM,EAAYjB,CAAC,GACpCkB,GAAM,KAAK,IAAI,EAAG,KAAK,IAAIhB,EAAGgB,CAAC,EAAId,EAAGc,CAAC,CAAC,EAAIhC,EAAWE,CAAW,EACnEsB,EAASL,EAAYE,EAAerB,EAAWE,CACpD,EACA,KAAK+B,EAAW,KAAM7B,CAAE,EACxB,KAAK6B,EAAW,KAAM5B,CAAE,EACxB,KAAK6B,EAAoB,KAAMxB,CAAQ,CAC3C,EACA,MACJ,CACH,CAEO,SAASyB,EAAK1C,EAAMC,EAAS,CAClC,OAAO,IAAIH,EAAKE,EAAM2C,EAAsBC,EAAsB3C,CAAO,CAAC,CAAC,CAC7E,CAEO,SAAS4C,EAAM7C,EAAMC,EAAU,GAAI,CACxC,OAAK6C,EAAM7C,CAAO,IAAGA,EAAU,CAAC,GAAGA,EAAS,EAAG8C,EAAS,GAAIC,EAAU,SAAU,CAAC,GAC1E,IAAIlD,EAAKE,EAAMiD,EAAYL,EAAsBM,EAAejD,CAAO,CAAC,CAAC,CAAC,CACnF,CAEO,SAASkD,EAAMnD,EAAMC,EAAU,GAAI,CACxC,OAAK6C,EAAM7C,CAAO,IAAGA,EAAU,CAAC,GAAGA,EAAS,EAAG8C,EAAS,GAAIC,EAAU,SAAU,CAAC,GAC1E,IAAIlD,EAAKE,EAAMoD,EAAYT,EAAsBU,EAAepD,CAAO,CAAC,CAAC,CAAC,CACnF","x_google_ignoreList":[0]}