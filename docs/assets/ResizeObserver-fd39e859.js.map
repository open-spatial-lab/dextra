{"version":3,"file":"ResizeObserver-fd39e859.js","sources":["../../node_modules/@lit-labs/virtualizer/polyfills/resize-observer-polyfill/ResizeObserver.js"],"sourcesContent":["/**\n * Detects whether window and document objects are available in current environment.\n */\nvar isBrowser =\n  typeof window !== 'undefined' &&\n  typeof document !== 'undefined' &&\n  window.document === document;\n\n// Returns global object of a current environment.\nvar global$1 = (function () {\n  if (typeof global !== 'undefined' && global.Math === Math) {\n    return global;\n  }\n  if (typeof self !== 'undefined' && self.Math === Math) {\n    return self;\n  }\n  if (typeof window !== 'undefined' && window.Math === Math) {\n    return window;\n  }\n  // eslint-disable-next-line no-new-func\n  return Function('return this')();\n})();\n\n/**\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\n * first one is not supported.\n *\n * @returns {number} Requests' identifier.\n */\nvar requestAnimationFrame$1 = (function () {\n  if (typeof requestAnimationFrame === 'function') {\n    // It's required to use a bounded function because IE sometimes throws\n    // an \"Invalid calling object\" error if rAF is invoked without the global\n    // object on the left hand side.\n    return requestAnimationFrame.bind(global$1);\n  }\n  var result = function (callback) {\n    return setTimeout(function () {\n      callback(+Date.now());\n    }, 1000 / 60);\n  };\n  return result;\n})();\n\n// Defines minimum timeout before adding a trailing call.\nvar trailingTimeout = 2;\n/**\n * Creates a wrapper function which ensures that provided callback will be\n * invoked only once during the specified delay period.\n *\n * @param callback - Function to be invoked after the delay period.\n * @param delay - Delay after which to invoke callback.\n */\nfunction throttle(callback, delay) {\n  var leadingCall = false,\n    trailingCall = false,\n    lastCallTime = 0;\n  /**\n   * Invokes the original callback function and schedules new invocation if\n   * the \"proxy\" was called during current request.\n   */\n  function resolvePending() {\n    if (leadingCall) {\n      leadingCall = false;\n      callback();\n    }\n    if (trailingCall) {\n      proxy();\n    }\n  }\n  /**\n   * Callback invoked after the specified delay. It will further postpone\n   * invocation of the original function delegating it to the\n   * requestAnimationFrame.\n   *\n   * @returns {void}\n   */\n  function timeoutCallback() {\n    requestAnimationFrame$1(resolvePending);\n  }\n  /**\n   * Schedules invocation of the original function.\n   */\n  function proxy() {\n    var timeStamp = Date.now();\n    if (leadingCall) {\n      // Reject immediately following calls.\n      if (timeStamp - lastCallTime < trailingTimeout) {\n        return;\n      }\n      // Schedule new call to be in invoked when the pending one is resolved.\n      // This is important for \"transitions\" which never actually start\n      // immediately so there is a chance that we might miss one if change\n      // happens amids the pending invocation.\n      trailingCall = true;\n    } else {\n      leadingCall = true;\n      trailingCall = false;\n      setTimeout(timeoutCallback, delay);\n    }\n    lastCallTime = timeStamp;\n  }\n  return proxy;\n}\n\n// Minimum delay before invoking the update of observers.\nvar REFRESH_DELAY = 20;\n// A list of substrings of CSS properties used to find transition events that\n// might affect dimensions of observed elements.\nvar transitionKeys = [\n  'top',\n  'right',\n  'bottom',\n  'left',\n  'width',\n  'height',\n  'size',\n  'weight',\n];\n// Check if MutationObserver is available.\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\n// Get the native implementation of HTMLElement.attachShadow\nvar origAttachShadow =\n  isBrowser &&\n  HTMLElement.prototype.attachShadow &&\n  HTMLElement.prototype.attachShadow.toString().indexOf('[native code]') !== -1\n    ? HTMLElement.prototype.attachShadow\n    : null;\n/**\n * Singleton controller class which handles updates of ResizeObserver instances.\n */\nvar ResizeObserverController = /** @class */ (function () {\n  /**\n   * Creates a new instance of ResizeObserverController.\n   */\n  function ResizeObserverController() {\n    /**\n     * Indicates whether DOM listeners have been added.\n     */\n    this.connected_ = false;\n    /**\n     * Tells that controller has subscribed for Mutation Events.\n     */\n    this.mutationEventsAdded_ = false;\n    /**\n     * Keeps reference to the instance of MutationObserver.\n     */\n    this.mutationsObserver_ = null;\n    /**\n     * A list of connected observers.\n     */\n    this.observers_ = [];\n    this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\n    this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\n  }\n  /**\n   * Adds observer to observers list.\n   *\n   * @param observer Observer to be added.\n   */\n  ResizeObserverController.prototype.addObserver = function (observer) {\n    if (!~this.observers_.indexOf(observer)) {\n      this.observers_.push(observer);\n    }\n    // Add listeners if they haven't been added yet.\n    if (!this.connected_) {\n      this.connect_();\n    }\n  };\n  /**\n   * Removes observer from observers list.\n   *\n   * @param observer Observer to be removed.\n   */\n  ResizeObserverController.prototype.removeObserver = function (observer) {\n    var observers = this.observers_;\n    var index = observers.indexOf(observer);\n    // Remove observer if it's present in registry.\n    if (~index) {\n      observers.splice(index, 1);\n    }\n    // Remove listeners if controller has no connected observers.\n    if (!observers.length && this.connected_) {\n      this.disconnect_();\n    }\n  };\n  /**\n   * Invokes the update of observers. It will continue running updates insofar\n   * it detects changes.\n   */\n  ResizeObserverController.prototype.refresh = function () {\n    var changesDetected = this.updateObservers_();\n    // Continue running updates if changes have been detected as there might\n    // be future ones caused by CSS transitions.\n    if (changesDetected) {\n      this.refresh();\n    }\n  };\n  /**\n   * Updates every observer from observers list and notifies them of queued\n   * entries.\n   *\n   * @returns Returns \"true\" if any observer has detected changes in\n   *      dimensions of it's elements.\n   */\n  ResizeObserverController.prototype.updateObservers_ = function () {\n    // Collect observers that have active observations.\n    var activeObservers = this.observers_.filter(function (observer) {\n      return observer.gatherActive(), observer.hasActive();\n    });\n    // Deliver notifications in a separate cycle in order to avoid any\n    // collisions between observers, e.g. when multiple instances of\n    // ResizeObserver are tracking the same element and the callback of one\n    // of them changes content dimensions of the observed target. Sometimes\n    // this may result in notifications being blocked for the rest of observers.\n    activeObservers.forEach(function (observer) {\n      return observer.broadcastActive();\n    });\n    return activeObservers.length > 0;\n  };\n  /**\n   * Initializes DOM listeners.\n   */\n  ResizeObserverController.prototype.connect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already added.\n    if (!isBrowser || this.connected_) {\n      return;\n    }\n    // Subscription to the \"Transitionend\" event is used as a workaround for\n    // delayed transitions. This way it's possible to capture at least the\n    // final state of an element.\n    document.addEventListener('transitionend', this.onTransitionEnd_);\n    window.addEventListener('resize', this.refresh);\n    if (mutationObserverSupported) {\n      this.mutationsObserver_ = new MutationObserver(this.refresh);\n      var options_1 = {\n        attributes: true,\n        childList: true,\n        characterData: true,\n        subtree: true,\n      };\n      this.mutationsObserver_.observe(document, options_1);\n      if (origAttachShadow) {\n        var controller_1 = this;\n        (function observeExistingShadowRoots(node) {\n          var shadowRoot = node.shadowRoot;\n          if (shadowRoot) {\n            controller_1.mutationsObserver_.observe(shadowRoot, options_1);\n            observeExistingShadowRoots(shadowRoot);\n          }\n          var child = node.firstElementChild;\n          while (child) {\n            observeExistingShadowRoots(child);\n            child = child.nextElementSibling;\n          }\n        })(document);\n        HTMLElement.prototype.attachShadow = function () {\n          var args = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n          }\n          var shadowRoot = origAttachShadow.apply(this, args);\n          controller_1.mutationsObserver_.observe(shadowRoot, options_1);\n          return shadowRoot;\n        };\n      }\n    } else {\n      document.addEventListener('DOMSubtreeModified', this.refresh);\n      this.mutationEventsAdded_ = true;\n    }\n    this.connected_ = true;\n  };\n  /**\n   * Removes DOM listeners.\n   */\n  ResizeObserverController.prototype.disconnect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already removed.\n    if (!isBrowser || !this.connected_) {\n      return;\n    }\n    document.removeEventListener('transitionend', this.onTransitionEnd_);\n    window.removeEventListener('resize', this.refresh);\n    if (this.mutationsObserver_) {\n      this.mutationsObserver_.disconnect();\n      if (origAttachShadow) {\n        HTMLElement.prototype.attachShadow = origAttachShadow;\n      }\n    }\n    if (this.mutationEventsAdded_) {\n      document.removeEventListener('DOMSubtreeModified', this.refresh);\n    }\n    this.mutationsObserver_ = null;\n    this.mutationEventsAdded_ = false;\n    this.connected_ = false;\n  };\n  /**\n   * \"Transitionend\" event handler.\n   */\n  ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\n    var _b = _a.propertyName,\n      propertyName = _b === void 0 ? '' : _b;\n    // Detect whether transition may affect dimensions of an element.\n    var isReflowProperty = transitionKeys.some(function (key) {\n      return !!~propertyName.indexOf(key);\n    });\n    if (isReflowProperty) {\n      this.refresh();\n    }\n  };\n  /**\n   * Returns instance of the ResizeObserverController.\n   */\n  ResizeObserverController.getInstance = function () {\n    if (!ResizeObserverController.instance_) {\n      ResizeObserverController.instance_ = new ResizeObserverController();\n    }\n    return ResizeObserverController.instance_;\n  };\n  /**\n   * Holds reference to the controller's instance.\n   */\n  ResizeObserverController.instance_ = null;\n  return ResizeObserverController;\n})();\n\n/*! *****************************************************************************\n Copyright (c) Microsoft Corporation. All rights reserved.\n Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\n this file except in compliance with the License. You may obtain a copy of the\n License at http://www.apache.org/licenses/LICENSE-2.0\n \n THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\n WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\n MERCHANTABLITY OR NON-INFRINGEMENT.\n \n See the Apache Version 2.0 License for specific language governing permissions\n and limitations under the License.\n ***************************************************************************** */\n\nfunction __values(o) {\n  var m = typeof Symbol === 'function' && o[Symbol.iterator],\n    i = 0;\n  if (m) return m.call(o);\n  return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {value: o && o[i++], done: !o};\n    },\n  };\n}\n\n/**\n * Defines non-writable/enumerable properties of the provided target object.\n *\n * @param target Object for which to define properties.\n * @param props Properties to be defined.\n * @returns Target object.\n */\nvar defineConfigurable = function (target, props) {\n  var e_1, _a;\n  try {\n    for (\n      var _b = __values(Object.keys(props)), _c = _b.next();\n      !_c.done;\n      _c = _b.next()\n    ) {\n      var key = _c.value;\n      Object.defineProperty(target, key, {\n        value: props[key],\n        enumerable: false,\n        writable: false,\n        configurable: true,\n      });\n    }\n  } catch (e_1_1) {\n    e_1 = {error: e_1_1};\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n  return target;\n};\n\n/**\n * Returns the global object associated with provided element.\n *\n * @param {EventT} target\n * @returns {Object}\n */\nvar getWindowOf = function (target) {\n  var _a;\n  // Assume that the element is an instance of Node, which means that it\n  // has the \"ownerDocument\" property from which we can retrieve a\n  // corresponding global object.\n  // Return the local global object if it's not possible extract one from\n  // provided element.\n  return (\n    ((_a =\n      target === null || target === void 0 ? void 0 : target.ownerDocument) ===\n      null || _a === void 0\n      ? void 0\n      : _a.defaultView) || global$1\n  );\n};\n\n// Placeholder of an empty content rectangle.\nvar emptyRect = createRectInit(0, 0, 0, 0);\n/**\n * Converts provided string to a number.\n */\nfunction toFloat(value) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  return parseFloat(value) || 0;\n}\n/**\n * Extracts borders size from provided styles.\n */\nfunction getBordersSize(styles) {\n  var positions = [];\n  for (var _i = 1; _i < arguments.length; _i++) {\n    positions[_i - 1] = arguments[_i];\n  }\n  return positions.reduce(function (size, position) {\n    var value = styles['border-' + position + '-width'];\n    return size + toFloat(value);\n  }, 0);\n}\n/**\n * Extracts paddings sizes from provided styles.\n */\nfunction getPaddings(styles) {\n  var st = styles;\n  return {\n    top: toFloat(st['padding-top']),\n    right: toFloat(st['padding-right']),\n    bottom: toFloat(st['padding-bottom']),\n    left: toFloat(st['padding-left']),\n  };\n}\n/**\n * Calculates content rectangle of provided SVG element.\n *\n * @param target Element content rectangle of which needs to be calculated.\n */\nfunction getSVGContentRect(target) {\n  var bbox = target.getBBox();\n  return createRectInit(0, 0, bbox.width, bbox.height);\n}\n/**\n * Calculates content rectangle of provided HTMLElement.\n *\n * @param target Element for which to calculate the content rectangle.\n */\nfunction getHTMLElementContentRect(target) {\n  // Client width & height properties can't be\n  // used exclusively as they provide rounded values.\n  var clientWidth = target.clientWidth,\n    clientHeight = target.clientHeight;\n  // By this condition we can catch all non-replaced inline, hidden and\n  // detached elements. Though elements with width & height properties less\n  // than 0.5 will be discarded as well.\n  //\n  // Without it we would need to implement separate methods for each of\n  // those cases and it's not possible to perform a precise and performance\n  // effective test for hidden elements. E.g. even jQuery's ':visible' filter\n  // gives wrong results for elements with width & height less than 0.5.\n  if (!clientWidth && !clientHeight) {\n    return emptyRect;\n  }\n  var styles = getWindowOf(target).getComputedStyle(target);\n  var paddings = getPaddings(styles);\n  var horizPad = paddings.left + paddings.right;\n  var vertPad = paddings.top + paddings.bottom;\n  // Computed styles of width & height are being used because they are the\n  // only dimensions available to JS that contain non-rounded values. It could\n  // be possible to utilize the getBoundingClientRect if only it's data wasn't\n  // affected by CSS transformations let alone paddings, borders and scroll\n  // bars.\n  var width = toFloat(styles.width),\n    height = toFloat(styles.height);\n  // Width & height include paddings and borders when the 'border-box' box\n  // model is applied (except for IE).\n  if (styles.boxSizing === 'border-box') {\n    // Following conditions are required to handle Internet Explorer which\n    // doesn't include paddings and borders to computed CSS dimensions.\n    //\n    // We can say that if CSS dimensions + paddings are equal to the \"client\"\n    // properties then it's either IE, and thus we don't need to subtract\n    // anything, or an element merely doesn't have paddings/borders styles.\n    if (Math.round(width + horizPad) !== clientWidth) {\n      width -= getBordersSize(styles, 'left', 'right') + horizPad;\n    }\n    if (Math.round(height + vertPad) !== clientHeight) {\n      height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\n    }\n  }\n  // Following steps can't be applied to the document's root element as its\n  // client[Width/Height] properties represent viewport area of the window.\n  // Besides, it's as well not necessary as the <html> itself neither has\n  // rendered scroll bars nor it can be clipped.\n  if (!isDocumentElement(target)) {\n    // In some browsers (only in Firefox, actually) CSS width & height\n    // include scroll bars size which can be removed at this step as scroll\n    // bars are the only difference between rounded dimensions + paddings\n    // and \"client\" properties, though that is not always true in Chrome.\n    var vertScrollbar = Math.round(width + horizPad) - clientWidth;\n    var horizScrollbar = Math.round(height + vertPad) - clientHeight;\n    // Chrome has a rather weird rounding of \"client\" properties.\n    // E.g. for an element with content width of 314.2px it sometimes gives\n    // the client width of 315px and for the width of 314.7px it may give\n    // 314px. And it doesn't happen all the time. So just ignore this delta\n    // as a non-relevant.\n    if (Math.abs(vertScrollbar) !== 1) {\n      width -= vertScrollbar;\n    }\n    if (Math.abs(horizScrollbar) !== 1) {\n      height -= horizScrollbar;\n    }\n  }\n  return createRectInit(paddings.left, paddings.top, width, height);\n}\n/**\n * Checks whether provided element is an instance of the SVGGraphicsElement.\n *\n * @param target Element to be checked.\n */\nvar isSVGGraphicsElement = (function () {\n  // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\n  // interface.\n  if (typeof SVGGraphicsElement !== 'undefined') {\n    return function (target) {\n      return target instanceof getWindowOf(target).SVGGraphicsElement;\n    };\n  }\n  // If it's so, then check that element is at least an instance of the\n  // SVGElement and that it has the \"getBBox\" method.\n  // eslint-disable-next-line no-extra-parens\n  return function (target) {\n    return (\n      target instanceof getWindowOf(target).SVGElement &&\n      typeof target.getBBox === 'function'\n    );\n  };\n})();\n/**\n * Checks whether provided element is a document element (<html>).\n *\n * @param target Element to be checked.\n */\nfunction isDocumentElement(target) {\n  return target === getWindowOf(target).document.documentElement;\n}\n/**\n * Calculates an appropriate content rectangle for provided html or svg element.\n *\n * @param target Element content rectangle of which needs to be calculated.\n */\nfunction getContentRect(target) {\n  if (!isBrowser) {\n    return emptyRect;\n  }\n  if (isSVGGraphicsElement(target)) {\n    return getSVGContentRect(target);\n  }\n  return getHTMLElementContentRect(target);\n}\n/**\n * Creates rectangle with an interface of the DOMRectReadOnly.\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\n *\n * @param rectInit Object with rectangle's x/y coordinates and\n *     dimensions.\n */\nfunction createReadOnlyRect(_a) {\n  var x = _a.x,\n    y = _a.y,\n    width = _a.width,\n    height = _a.height;\n  // If DOMRectReadOnly is available use it as a prototype for the rectangle.\n  var Constr =\n    typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\n  var rect = Object.create(Constr.prototype);\n  // Rectangle's properties are not writable and non-enumerable.\n  defineConfigurable(rect, {\n    x: x,\n    y: y,\n    width: width,\n    height: height,\n    top: y,\n    right: x + width,\n    bottom: height + y,\n    left: x,\n  });\n  return rect;\n}\n/**\n * Creates DOMRectInit object based on the provided dimensions and the x/y\n * coordinates. Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\n *\n * @param x X coordinate.\n * @param y Y coordinate.\n * @param width Rectangle's width.\n * @param height Rectangle's height.\n */\nfunction createRectInit(x, y, width, height) {\n  return {x: x, y: y, width: width, height: height};\n}\n\n/**\n * Class that is responsible for computations of the content rectangle of\n * provided DOM element and for keeping track of it's changes.\n */\nvar ResizeObservation = /** @class */ (function () {\n  /**\n   * Creates an instance of ResizeObservation.\n   *\n   * @param target Element to be observed.\n   */\n  function ResizeObservation(target) {\n    /**\n     * Broadcasted width of content rectangle.\n     */\n    this.broadcastWidth = 0;\n    /**\n     * Broadcasted height of content rectangle.\n     */\n    this.broadcastHeight = 0;\n    /**\n     * Reference to the last observed content rectangle.\n     */\n    this.contentRect_ = createRectInit(0, 0, 0, 0);\n    this.target = target;\n  }\n  /**\n   * Updates content rectangle and tells whether it's width or height properties\n   * have changed since the last broadcast.\n   */\n  ResizeObservation.prototype.isActive = function () {\n    var rect = getContentRect(this.target);\n    this.contentRect_ = rect;\n    return (\n      rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight\n    );\n  };\n  /**\n   * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\n   * from the corresponding properties of the last observed content rectangle.\n   *\n   * @returns Last observed content rectangle.\n   */\n  ResizeObservation.prototype.broadcastRect = function () {\n    var rect = this.contentRect_;\n    this.broadcastWidth = rect.width;\n    this.broadcastHeight = rect.height;\n    return rect;\n  };\n  return ResizeObservation;\n})();\n\nvar ResizeObserverEntry = /** @class */ (function () {\n  /**\n   * Creates an instance of ResizeObserverEntry.\n   *\n   * @param target Element that is being observed.\n   * @param rectInit Data of the element's content rectangle.\n   */\n  function ResizeObserverEntry(target, rectInit) {\n    var contentRect = createReadOnlyRect(rectInit);\n    // According to the specification following properties are not writable\n    // and are also not enumerable in the native implementation.\n    //\n    // Property accessors are not being used as they'd require to define a\n    // private WeakMap storage which may cause memory leaks in browsers that\n    // don't support this type of collections.\n    defineConfigurable(this, {target: target, contentRect: contentRect});\n  }\n  return ResizeObserverEntry;\n})();\n\n/**\n * A collection of shims that provide minimal functionality of the ES6\n * collections.\n *\n * These implementations are not meant to be used outside of the ResizeObserver\n * modules as they cover only a limited range of use cases.\n */\n/* eslint-disable require-jsdoc, valid-jsdoc */\nvar MapShim = (function () {\n  if (typeof Map !== 'undefined') {\n    return Map;\n  }\n  /**\n   * Returns index in provided array that matches the specified key.\n   */\n  function getIndex(arr, key) {\n    var result = -1;\n    arr.some(function (entry, index) {\n      if (entry[0] === key) {\n        result = index;\n        return true;\n      }\n      return false;\n    });\n    return result;\n  }\n  return /** @class */ (function () {\n    function class_1() {\n      this.__entries__ = [];\n    }\n    Object.defineProperty(class_1.prototype, 'size', {\n      get: function () {\n        return this.__entries__.length;\n      },\n      enumerable: true,\n      configurable: true,\n    });\n    class_1.prototype.get = function (key) {\n      var _a;\n      var index = getIndex(this.__entries__, key);\n      return (_a = this.__entries__[index]) === null || _a === void 0\n        ? void 0\n        : _a[1];\n    };\n    class_1.prototype.set = function (key, value) {\n      var index = getIndex(this.__entries__, key);\n      if (~index) {\n        this.__entries__[index][1] = value;\n      } else {\n        this.__entries__.push([key, value]);\n      }\n    };\n    class_1.prototype.delete = function (key) {\n      var entries = this.__entries__;\n      var index = getIndex(entries, key);\n      if (~index) {\n        entries.splice(index, 1);\n      }\n    };\n    class_1.prototype.has = function (key) {\n      return !!~getIndex(this.__entries__, key);\n    };\n    class_1.prototype.clear = function () {\n      this.__entries__.splice(0);\n    };\n    class_1.prototype.forEach = function (callback, ctx) {\n      var e_1, _a;\n      if (ctx === void 0) {\n        ctx = null;\n      }\n      try {\n        for (\n          var _b = __values(this.__entries__), _c = _b.next();\n          !_c.done;\n          _c = _b.next()\n        ) {\n          var entry = _c.value;\n          callback.call(ctx, entry[1], entry[0]);\n        }\n      } catch (e_1_1) {\n        e_1 = {error: e_1_1};\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    };\n    return class_1;\n  })();\n})();\n\nvar ResizeObserverSPI = /** @class */ (function () {\n  /**\n   * Creates a new instance of ResizeObserver.\n   *\n   * @param callback Callback function that is invoked when one of the observed\n   *     elements changes it's content dimensions.\n   * @param controller Controller instance which is responsible for the updates\n   *     of observer.\n   * @param callbackCtx Reference to the public ResizeObserver instance which\n   *     will be passed to callback function.\n   */\n  function ResizeObserverSPI(callback, controller, callbackCtx) {\n    /**\n     * Collection of resize observations that have detected changes in dimensions\n     * of elements.\n     */\n    this.activeObservations_ = [];\n    /**\n     * Registry of the ResizeObservation instances.\n     */\n    this.observations_ = new MapShim();\n    if (typeof callback !== 'function') {\n      throw new TypeError(\n        'The callback provided as parameter 1 is not a function.'\n      );\n    }\n    this.callback_ = callback;\n    this.controller_ = controller;\n    this.callbackCtx_ = callbackCtx;\n  }\n  /**\n   * Starts observing provided element.\n   *\n   * @param target Element to be observed.\n   */\n  ResizeObserverSPI.prototype.observe = function (target) {\n    if (target === undefined) {\n      throw new TypeError('1 argument required, but only 0 present.');\n    }\n    // Do nothing if current environment doesn't have the Element interface.\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n      return;\n    }\n    if (!(target instanceof getWindowOf(target).Element)) {\n      throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n    var observations = this.observations_;\n    // Do nothing if element is already being observed.\n    if (observations.has(target)) {\n      return;\n    }\n    observations.set(target, new ResizeObservation(target));\n    this.controller_.addObserver(this);\n    // Force the update of observations.\n    this.controller_.refresh();\n  };\n  /**\n   * Stops observing provided element.\n   *\n   * @param target Element to stop observing.\n   */\n  ResizeObserverSPI.prototype.unobserve = function (target) {\n    if (target === undefined) {\n      throw new TypeError('1 argument required, but only 0 present.');\n    }\n    // Do nothing if current environment doesn't have the Element interface.\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n      return;\n    }\n    if (!(target instanceof getWindowOf(target).Element)) {\n      throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n    var observations = this.observations_;\n    // Do nothing if element is not being observed.\n    if (!observations.has(target)) {\n      return;\n    }\n    observations.delete(target);\n    if (!observations.size) {\n      this.controller_.removeObserver(this);\n    }\n  };\n  /**\n   * Stops observing all elements.\n   */\n  ResizeObserverSPI.prototype.disconnect = function () {\n    this.clearActive();\n    this.observations_.clear();\n    this.controller_.removeObserver(this);\n  };\n  /**\n   * Collects observation instances the associated element of which has changed\n   * it's content rectangle.\n   */\n  ResizeObserverSPI.prototype.gatherActive = function () {\n    var _this = this;\n    this.clearActive();\n    this.observations_.forEach(function (observation) {\n      if (observation.isActive()) {\n        _this.activeObservations_.push(observation);\n      }\n    });\n  };\n  /**\n   * Invokes initial callback function with a list of ResizeObserverEntry\n   * instances collected from active resize observations.\n   */\n  ResizeObserverSPI.prototype.broadcastActive = function () {\n    // Do nothing if observer doesn't have active observations.\n    if (!this.hasActive()) {\n      return;\n    }\n    var ctx = this.callbackCtx_;\n    // Create ResizeObserverEntry instance for every active observation.\n    var entries = this.activeObservations_.map(function (observation) {\n      return new ResizeObserverEntry(\n        observation.target,\n        observation.broadcastRect()\n      );\n    });\n    this.callback_.call(ctx, entries, ctx);\n    this.clearActive();\n  };\n  /**\n   * Clears the collection of active observations.\n   */\n  ResizeObserverSPI.prototype.clearActive = function () {\n    this.activeObservations_.splice(0);\n  };\n  /**\n   * Tells whether observer has active observations.\n   */\n  ResizeObserverSPI.prototype.hasActive = function () {\n    return this.activeObservations_.length > 0;\n  };\n  return ResizeObserverSPI;\n})();\n\n/**\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\n * exposing only those methods and properties that are defined in the spec.\n */\nvar ResizeObserver = /** @class */ (function () {\n  /**\n   * Creates a new instance of ResizeObserver.\n   *\n   * @param callback Callback that is invoked when dimensions of the observed\n   *     elements change.\n   */\n  function ResizeObserver(callback) {\n    if (!(this instanceof ResizeObserver)) {\n      throw new TypeError('Cannot call a class as a function.');\n    }\n    if (!arguments.length) {\n      throw new TypeError('1 argument required, but only 0 present.');\n    }\n    var controller = ResizeObserverController.getInstance();\n    this.observer_ = new ResizeObserverSPI(callback, controller, this);\n  }\n  ResizeObserver.prototype.observe = function (target) {\n    this.observer_.observe(target);\n  };\n  ResizeObserver.prototype.unobserve = function (target) {\n    this.observer_.unobserve(target);\n  };\n  ResizeObserver.prototype.disconnect = function () {\n    this.observer_.disconnect();\n  };\n  return ResizeObserver;\n})();\n\nvar index = (function () {\n  // Export existing implementation if available.\n  if (typeof global$1.ResizeObserver !== 'undefined') {\n    return global$1.ResizeObserver;\n  }\n  return ResizeObserver;\n})();\n\nexport default index;\n"],"names":["isBrowser","global$1","requestAnimationFrame$1","result","callback","trailingTimeout","throttle","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","REFRESH_DELAY","transitionKeys","mutationObserverSupported","origAttachShadow","ResizeObserverController","observer","observers","index","changesDetected","activeObservers","options_1","controller_1","observeExistingShadowRoots","node","shadowRoot","child","args","_i","_a","_b","propertyName","isReflowProperty","key","__values","o","m","i","defineConfigurable","target","props","e_1","_c","e_1_1","getWindowOf","emptyRect","createRectInit","toFloat","value","getBordersSize","styles","positions","size","position","getPaddings","st","getSVGContentRect","bbox","getHTMLElementContentRect","clientWidth","clientHeight","paddings","horizPad","vertPad","width","height","isDocumentElement","vertScrollbar","horizScrollbar","isSVGGraphicsElement","getContentRect","createReadOnlyRect","x","y","Constr","rect","ResizeObservation","ResizeObserverEntry","rectInit","contentRect","MapShim","getIndex","arr","entry","class_1","entries","ctx","ResizeObserverSPI","controller","callbackCtx","observations","_this","observation","ResizeObserver"],"mappings":"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","x_google_ignoreList":[0]}