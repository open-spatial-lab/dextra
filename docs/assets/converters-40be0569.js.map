{"version":3,"file":"converters-40be0569.js","sources":["../../dextra-components/src/components/core/utils/converters.ts"],"sourcesContent":["export const interpretFuncJsonOrString = (value: string | null, _type: unknown) => {\n  if (value === null) {\n    return value;\n  }\n  // regex to check if string contians (a,b)=>\n  const isArrowFunction = /\\([^()]*\\)\\s*=>/g.test(value);\n  // regex to check if arrow function with no parenthesis\n  const isArrowFunctionNoParenthesis = /\\w+\\s*=>/g.test(value);\n  // regex to check if string is stringified function\n  const isNormalFunction = /^function\\s*\\([^\\)]*\\)\\s*\\{.*\\}$/s.test(value);\n  if (isArrowFunction || isArrowFunctionNoParenthesis) {\n    const splitArrowSimpleParts = value.split(\"=>\")\n    const parts = isArrowFunctionNoParenthesis\n      ? [null, null, splitArrowSimpleParts[0], splitArrowSimpleParts[1]]\n      : /^\\s*([^\\(]*)?\\s*\\(?([^\\)]*)\\)?\\s*=>\\s*{?([\\s\\S]*)}?/.exec(value);\n\n    if (parts?.length && parts.length > 3) {\n      const p = parts as RegExpExecArray;\n      let body = p[3];\n      // check if implicit return\n      if (!body.includes(\"return\")) {\n        body = \"return \" + body;\n      }\n      // check if last character is } and slice\n      if (body[body.length - 1] === \"}\") {\n        body = body.slice(0, -1);\n      }\n      return new Function(p[2], body);\n    } else {\n      return (d: any) => d;\n    }\n  }\n  if (isNormalFunction) {\n    const parts = /function\\s*([^\\(]*)\\s*\\(([^\\)]*)\\)\\s*\\{([\\s\\S]*)\\}/.exec(\n      value\n    );\n    if (parts) {\n      return new Function(parts[2], parts[3]);\n    } else {\n      return (d: any) => d;\n    }\n  }\n  try {\n    return JSON.parse(value);\n  } catch (e) {\n    return value;\n  }\n};"],"names":["interpretFuncJsonOrString","value","_type","isArrowFunction","isArrowFunctionNoParenthesis","isNormalFunction","splitArrowSimpleParts","parts","p","body","d"],"mappings":"AAAa,MAAAA,EAA4B,CAACC,EAAsBC,IAAmB,CACjF,GAAID,IAAU,KACL,OAAAA,EAGH,MAAAE,EAAkB,mBAAmB,KAAKF,CAAK,EAE/CG,EAA+B,YAAY,KAAKH,CAAK,EAErDI,EAAmB,oCAAoC,KAAKJ,CAAK,EACvE,GAAIE,GAAmBC,EAA8B,CAC7C,MAAAE,EAAwBL,EAAM,MAAM,IAAI,EACxCM,EAAQH,EACV,CAAC,KAAM,KAAME,EAAsB,CAAC,EAAGA,EAAsB,CAAC,CAAC,EAC/D,sDAAsD,KAAKL,CAAK,EAEpE,GAAIM,GAAA,MAAAA,EAAO,QAAUA,EAAM,OAAS,EAAG,CACrC,MAAMC,EAAID,EACN,IAAAE,EAAOD,EAAE,CAAC,EAEd,OAAKC,EAAK,SAAS,QAAQ,IACzBA,EAAO,UAAYA,GAGjBA,EAAKA,EAAK,OAAS,CAAC,IAAM,MACrBA,EAAAA,EAAK,MAAM,EAAG,EAAE,GAElB,IAAI,SAASD,EAAE,CAAC,EAAGC,CAAI,CAAA,KAE9B,QAAQC,GAAWA,CAEvB,CACA,GAAIL,EAAkB,CACpB,MAAME,EAAQ,qDAAqD,KACjEN,CAAA,EAEF,OAAIM,EACK,IAAI,SAASA,EAAM,CAAC,EAAGA,EAAM,CAAC,CAAC,EAE9BG,GAAWA,CAEvB,CACI,GAAA,CACK,OAAA,KAAK,MAAMT,CAAK,QAEhB,OAAAA,CACT,CACF"}