{"version":3,"file":"dot-04a474de.js","sources":["../../node_modules/@observablehq/plot/src/marks/dot.js"],"sourcesContent":["import {pathRound as path, symbolCircle} from \"d3\";\nimport {create} from \"../context.js\";\nimport {negative, positive} from \"../defined.js\";\nimport {Mark} from \"../mark.js\";\nimport {identity, maybeFrameAnchor, maybeNumberChannel, maybeTuple} from \"../options.js\";\nimport {\n  applyChannelStyles,\n  applyDirectStyles,\n  applyFrameAnchor,\n  applyIndirectStyles,\n  applyTransform\n} from \"../style.js\";\nimport {maybeSymbolChannel} from \"../symbol.js\";\nimport {template} from \"../template.js\";\nimport {sort} from \"../transforms/basic.js\";\nimport {maybeIntervalMidX, maybeIntervalMidY} from \"../transforms/interval.js\";\n\nconst defaults = {\n  ariaLabel: \"dot\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 1.5\n};\n\nexport function withDefaultSort(options) {\n  return options.sort === undefined && options.reverse === undefined ? sort({channel: \"-r\"}, options) : options;\n}\n\nexport class Dot extends Mark {\n  constructor(data, options = {}) {\n    const {x, y, r, rotate, symbol = symbolCircle, frameAnchor} = options;\n    const [vrotate, crotate] = maybeNumberChannel(rotate, 0);\n    const [vsymbol, csymbol] = maybeSymbolChannel(symbol);\n    const [vr, cr] = maybeNumberChannel(r, vsymbol == null ? 3 : 4.5);\n    super(\n      data,\n      {\n        x: {value: x, scale: \"x\", optional: true},\n        y: {value: y, scale: \"y\", optional: true},\n        r: {value: vr, scale: \"r\", filter: positive, optional: true},\n        rotate: {value: vrotate, optional: true},\n        symbol: {value: vsymbol, scale: \"auto\", optional: true}\n      },\n      withDefaultSort(options),\n      defaults\n    );\n    this.r = cr;\n    this.rotate = crotate;\n    this.symbol = csymbol;\n    this.frameAnchor = maybeFrameAnchor(frameAnchor);\n\n    // Give a hint to the symbol scale; this allows the symbol scale to choose\n    // appropriate default symbols based on whether the dots are filled or\n    // stroked, and for the symbol legend to match the appearance of the dots.\n    const {channels} = this;\n    const {symbol: symbolChannel} = channels;\n    if (symbolChannel) {\n      const {fill: fillChannel, stroke: strokeChannel} = channels;\n      symbolChannel.hint = {\n        fill: fillChannel ? (fillChannel.value === symbolChannel.value ? \"color\" : \"currentColor\") : this.fill,\n        stroke: strokeChannel ? (strokeChannel.value === symbolChannel.value ? \"color\" : \"currentColor\") : this.stroke\n      };\n    }\n  }\n  render(index, scales, channels, dimensions, context) {\n    const {x, y} = scales;\n    const {x: X, y: Y, r: R, rotate: A, symbol: S} = channels;\n    const {r, rotate, symbol} = this;\n    const [cx, cy] = applyFrameAnchor(this, dimensions);\n    const circle = symbol === symbolCircle;\n    const size = R ? undefined : r * r * Math.PI;\n    if (negative(r)) index = [];\n    return create(\"svg:g\", context)\n      .call(applyIndirectStyles, this, dimensions, context)\n      .call(applyTransform, this, {x: X && x, y: Y && y})\n      .call((g) =>\n        g\n          .selectAll()\n          .data(index)\n          .enter()\n          .append(circle ? \"circle\" : \"path\")\n          .call(applyDirectStyles, this)\n          .call(\n            circle\n              ? (selection) => {\n                  selection\n                    .attr(\"cx\", X ? (i) => X[i] : cx)\n                    .attr(\"cy\", Y ? (i) => Y[i] : cy)\n                    .attr(\"r\", R ? (i) => R[i] : r);\n                }\n              : (selection) => {\n                  selection\n                    .attr(\n                      \"transform\",\n                      template`translate(${X ? (i) => X[i] : cx},${Y ? (i) => Y[i] : cy})${\n                        A ? (i) => ` rotate(${A[i]})` : rotate ? ` rotate(${rotate})` : ``\n                      }`\n                    )\n                    .attr(\n                      \"d\",\n                      R && S\n                        ? (i) => {\n                            const p = path();\n                            S[i].draw(p, R[i] * R[i] * Math.PI);\n                            return p;\n                          }\n                        : R\n                        ? (i) => {\n                            const p = path();\n                            symbol.draw(p, R[i] * R[i] * Math.PI);\n                            return p;\n                          }\n                        : S\n                        ? (i) => {\n                            const p = path();\n                            S[i].draw(p, size);\n                            return p;\n                          }\n                        : (() => {\n                            const p = path();\n                            symbol.draw(p, size);\n                            return p;\n                          })()\n                    );\n                }\n          )\n          .call(applyChannelStyles, this, channels)\n      )\n      .node();\n  }\n}\n\nexport function dot(data, {x, y, ...options} = {}) {\n  if (options.frameAnchor === undefined) [x, y] = maybeTuple(x, y);\n  return new Dot(data, {...options, x, y});\n}\n\nexport function dotX(data, {x = identity, ...options} = {}) {\n  return new Dot(data, maybeIntervalMidY({...options, x}));\n}\n\nexport function dotY(data, {y = identity, ...options} = {}) {\n  return new Dot(data, maybeIntervalMidX({...options, y}));\n}\n\nexport function circle(data, options) {\n  return dot(data, {...options, symbol: \"circle\"});\n}\n\nexport function hexagon(data, options) {\n  return dot(data, {...options, symbol: \"hexagon\"});\n}\n"],"names":["defaults","withDefaultSort","options","sort","Dot","Mark","data","x","y","r","rotate","symbol","symbolCircle","frameAnchor","vrotate","crotate","maybeNumberChannel","vsymbol","csymbol","maybeSymbolChannel","vr","cr","positive","maybeFrameAnchor","channels","symbolChannel","fillChannel","strokeChannel","index","scales","dimensions","context","X","Y","R","A","S","cx","cy","applyFrameAnchor","circle","size","negative","create","applyIndirectStyles","applyTransform","g","applyDirectStyles","selection","i","template","p","path","applyChannelStyles","dot","maybeTuple"],"mappings":"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","x_google_ignoreList":[0]}