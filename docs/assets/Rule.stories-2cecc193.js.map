{"version":3,"file":"Rule.stories-2cecc193.js","sources":["../../dextra-components/src/components/marks/Rule/src/Rule.ts"],"sourcesContent":["import { customElement, property } from \"lit/decorators.js\";\nimport { PlotMark } from \"../../PlotMark/src/PlotMark\";\nimport * as Plot from \"@observablehq/plot\";\nimport { RuleOptions } from \"@observablehq/plot\";\nimport { RuleXOptions } from \"@observablehq/plot\";\nimport { RuleYOptions } from \"@observablehq/plot\";\nimport { interpretFuncJsonOrString } from \"../../../core/utils/converters\";\nimport { safeCustomElement } from \"../../../core/decorators/safeCustomElement\";\n\n\n@safeCustomElement(\"osl-rule-plot\")\nexport class OslRule extends PlotMark {\n  mark = \"rule\"\n\n  @property({ converter: interpretFuncJsonOrString })\n  x?: string;\n\n  @property({ converter: interpretFuncJsonOrString })\n  y?: string;\n\n  @property({ converter: interpretFuncJsonOrString })\n  interval?: RuleOptions[\"interval\"];\n\n  @property({ type: String })\n  x1?: RuleYOptions[\"x1\"];\n\n  @property({ type: String })\n  x2?: RuleYOptions[\"x2\"];\n\n  @property({ type: String })\n  y1?: RuleXOptions[\"y1\"];\n\n  @property({ type: String })\n  y2?: RuleXOptions[\"y2\"];\n\n  @property({ type: String })\n  direction?: string=\"horizontal\";\n\n  markOptions: (keyof this)[] = [\"x\", \"y\", \"interval\", \"x1\", \"x2\", \"y1\", \"y2\", \"direction\"];\n\n  public override get plot() {\n    const innerData = this?.currentResults;\n    const options = this.allOptions;\n\n    return (overrideData?: any, overrideOptions?: {}) => {\n      const data = innerData?.length ? innerData : overrideData;\n\n      if (this.direction==\"vertical\") {\n          return Plot.ruleX(data, { ...overrideOptions, ...options});\n      } else {\n          return Plot.ruleY(data, { ...overrideOptions, ...options});\n      }\n    }\n  };\n\nrender() {\n    return null\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"osl-rule-plot\": OslRule;\n  }\n}"],"names":["OslRule","PlotMark","innerData","options","overrideData","overrideOptions","data","Plot.ruleX","Plot.ruleY","__decorateClass","property","interpretFuncJsonOrString","safeCustomElement"],"mappings":"kiBAWa,IAAAA,EAAN,cAAsBC,CAAS,CAA/B,aAAA,CAAA,MAAA,GAAA,SAAA,EACE,KAAA,KAAA,OAwBY,KAAA,UAAA,aAEW,KAAA,YAAA,CAAC,IAAK,IAAK,WAAY,KAAM,KAAM,KAAM,KAAM,WAAW,CAAA,CAExF,IAAoB,MAAO,CACzB,MAAMC,EAAY,uBAAM,eAClBC,EAAU,KAAK,WAEd,MAAA,CAACC,EAAoBC,IAAyB,CAC7C,MAAAC,EAAOJ,GAAA,MAAAA,EAAW,OAASA,EAAYE,EAEzC,OAAA,KAAK,WAAW,WACTG,EAAWD,EAAM,CAAE,GAAGD,EAAiB,GAAGF,EAAQ,EAElDK,EAAWF,EAAM,CAAE,GAAGD,EAAiB,GAAGF,EAAQ,CAC7D,CAEJ,CAEF,QAAS,CACE,OAAA,IACT,CACF,EA3CEM,EAAA,CADCC,EAAS,CAAE,UAAWC,EAA2B,CAAA,EAHvCX,EAIX,UAAA,IAAA,CAAA,EAGAS,EAAA,CADCC,EAAS,CAAE,UAAWC,EAA2B,CAAA,EANvCX,EAOX,UAAA,IAAA,CAAA,EAGAS,EAAA,CADCC,EAAS,CAAE,UAAWC,EAA2B,CAAA,EATvCX,EAUX,UAAA,WAAA,CAAA,EAGAS,EAAA,CADCC,EAAS,CAAE,KAAM,OAAQ,CAAA,EAZfV,EAaX,UAAA,KAAA,CAAA,EAGAS,EAAA,CADCC,EAAS,CAAE,KAAM,OAAQ,CAAA,EAffV,EAgBX,UAAA,KAAA,CAAA,EAGAS,EAAA,CADCC,EAAS,CAAE,KAAM,OAAQ,CAAA,EAlBfV,EAmBX,UAAA,KAAA,CAAA,EAGAS,EAAA,CADCC,EAAS,CAAE,KAAM,OAAQ,CAAA,EArBfV,EAsBX,UAAA,KAAA,CAAA,EAGAS,EAAA,CADCC,EAAS,CAAE,KAAM,OAAQ,CAAA,EAxBfV,EAyBX,UAAA,YAAA,CAAA,EAzBWA,EAANS,EAAA,CADNG,EAAkB,eAAe,CAAA,EACrBZ,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}